-- 1) Display the name of all employees, and their bonus (12% of salary)
SELECT name, salary * 0.12 AS bonus FROM employee;

-- 2) Display the name of the employees and the experience in years
SELECT name, TIMESTAMPDIFF(YEAR, hire_date, CURDATE()) AS experience FROM employee;

-- 3) Show the names of all employees, and the date on which they completed 5 years of service
SELECT name, DATE_ADD(hire_date, INTERVAL 5 YEAR) AS completion_date FROM employee;

-- 4) Find the managers hired in the year 2012
SELECT name FROM employee WHERE role = 'Manager' AND YEAR(hire_date) = 2012;

-- 5) Display the names of all employees whose names start with 'T'
SELECT name FROM employee WHERE name LIKE 'T%';

-- 6) Find the names of all MANAGERs who are not in department 30
SELECT name FROM employee WHERE role = 'Manager' AND deptno <> 30;

-- 7) List the employee name and employee number with headings as NUMBER and NAME
SELECT emp_no AS NUMBER, name AS NAME FROM employee;

-- 8) Find the names of all employees receiving a commission greater than 400
SELECT name FROM employee WHERE commission > 400;

-- 9) Find the names of all employees whose name ends with 'M' and salary between 1000 and 4500
SELECT name FROM employee WHERE name LIKE '%M' AND salary BETWEEN 1000 AND 4500;

-- 10) Find the names of all employees who have a letter 'L' as the third letter in their name
SELECT name FROM employee WHERE name LIKE '__L%';

-- 11) Display the name, salary, department name, and location for all employees (using JOIN)
SELECT e.name, e.salary, d.dept_name, d.location 
FROM employee e 
JOIN department d ON e.deptno = d.deptno;

-- 12) Find the name, salary, and manager of employees who are senior to their manager (using subquery)
SELECT e1.name, e1.salary, e1.manager_id 
FROM employee e1 
WHERE e1.salary > (SELECT salary FROM employee e2 WHERE e1.manager_id = e2.emp_no);

-- 13) Display the position at which the string 'R' occurs in the name
SELECT name, LOCATE('R', name) AS position FROM employee;

-- 14) Find the department names and locations where employees exist
SELECT DISTINCT d.dept_name, d.location 
FROM department d 
JOIN employee e ON d.deptno = e.deptno;

-- 15) Find employees whose commission is greater than 20 percent of their salary
SELECT name FROM employee WHERE commission > (salary * 0.2);

-- 16) Find details of all managers (any department) and all clerks in dept 10
SELECT * FROM employee WHERE role = 'Manager' OR (role = 'Clerk' AND deptno = 10);

-- 17) Find details of all managers in dept 10 and all clerks in dept 20
SELECT * FROM employee WHERE (role = 'Manager' AND deptno = 10) OR (role = 'Clerk' AND deptno = 20);

-- 18) Display the employee name and the manager name (use self join)
SELECT e.name AS Employee, m.name AS Manager 
FROM employee e 
JOIN employee m ON e.manager_id = m.emp_no;

-- 19) The above query sorted by employee name
SELECT e.name AS Employee, m.name AS Manager 
FROM employee e 
JOIN employee m ON e.manager_id = m.emp_no 
ORDER BY e.name;

-- 20) Display employees whose salary is greater than the avg salary of their department (using subquery)
SELECT name, salary 
FROM employee e1 
WHERE salary > (SELECT AVG(salary) FROM employee e2 WHERE e1.deptno = e2.deptno);

-- 21) Display the current date and time
SELECT NOW() AS current_datetime;

-- 22) Display details of employees (name, salary, deptno) sorted by name
SELECT name, salary, deptno FROM employee ORDER BY name;

-- 23) Create the account table with the given structure
CREATE TABLE account (
    accno INT NOT NULL PRIMARY KEY,
    accHoldername VARCHAR(50) NOT NULL,
    city VARCHAR(20) DEFAULT 'mumbai'
);
